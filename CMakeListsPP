cmake_minimum_required(VERSION 3.10)

project(PointProcessing)

# Set build type to Release for performance optimization
set(CMAKE_BUILD_TYPE Release)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Specify the target architecture for M2 chip (ARM architecture)
set(CMAKE_OSX_ARCHITECTURES arm64) # Target arm64 for M2

# Paths for vcpkg includes and libraries (should match ARM architecture)
set(VCPKG_INSTALL_PATH /path/to/vcpkg/installed/arm64-osx)

include_directories(${VCPKG_INSTALL_PATH}/include)

# Add MATLAB's include and lib paths
include_directories(/Applications/MATLAB_R2023b.app/extern/include)
link_directories(/Applications/MATLAB_R2023b.app/bin/maci64)

# Find CGAL and required libraries using vcpkg toolchain or standard find_package
find_package(CGAL REQUIRED)
find_package(CGAL CONFIG REQUIRED)

# Suppress the warning related to find_package using upper-case variables
cmake_policy(SET CMP0144 NEW)

# Create the MEX module, ensure this is a shared library for MATLAB
add_library(PointProcessing MODULE src/main.cpp)

# Specify the MATLAB libraries
set(MATLAB_LIBRARIES "mex" "mx")

# Linking necessary libraries
target_link_libraries(PointProcessing PRIVATE CGAL::CGAL ${MATLAB_LIBRARIES})

# Set the output name to have the appropriate MEX extension
set_target_properties(PointProcessing PROPERTIES PREFIX "" SUFFIX ".mexmaci64")
